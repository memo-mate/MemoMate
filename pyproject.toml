[project]
name = "MemoMate"
version = "0.1.0"
description = "MemoMate is a RAG application that allows you to manage your notes and tasks."
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "httpx[socks]>=0.28.1",
    "huggingface-hub>=0.29.1",
    "lancedb>=0.20.0",
    "langchain>=0.3.19",
    "langchain-community>=0.3.18",
    "langchain-huggingface>=0.1.2",
    "langchain-ollama>=0.2.3",
    "langchain-openai>=0.3.7",
    "langgraph>=0.3.2",
    "pandas>=2.2.3",
    "pymupdf>=1.25.3",
    "rich>=13.9.4",
    "tavily-python>=0.5.1",
    "unstructured[md]>=0.16.23",
    # web
    "fastapi[standard]<1.0.0,>=0.114.2",
    "python-multipart<1.0.0,>=0.0.7",
    "email-validator<3.0.0.0,>=2.1.0.post1",
    "passlib[bcrypt]<2.0.0,>=1.7.4",
    "tenacity>=8.2.3,<10.0.0",
    "pydantic>2.0",
    "emails<1.0,>=0.6",
    "jinja2<4.0.0,>=3.1.4",
    "alembic<2.0.0,>=1.12.1",
    "httpx<1.0.0,>=0.25.1",
    "psycopg[binary]<4.0.0,>=3.1.13",
    "sqlmodel<1.0.0,>=0.0.21",
    # Pin bcrypt until passlib supports the latest
    "bcrypt==4.3.0",
    "pydantic-settings<3.0.0,>=2.2.1",
    "pyjwt<3.0.0,>=2.8.0",
    "structlog>=25.1.0",
    "orjson>=3.10.14",
    "redis[hiredis]>=5.2.1",
    "pillow>=11.1.0",
    "qdrant-client>=1.12.1",
    "sse-starlette>=2.2.1",
    "websockets>=15.0.1",
    "faster-whisper>=1.1.1",
    "kafka-python>=2.1.2",
]

[dependency-groups]
dev = [
    "huggingface-hub[cli]>=0.29.1",
    "ipython>=8.32.0",
    "markitdown>=0.0.1",
    "mypy>=1.15.0",
    "pandas-stubs>=2.2.3.241126",
    "pre-commit>=4.1.0",
    "pytest>=8.3.4",
    "ruff>=0.9.7",
    "types-passlib>=1.7.7.20241221",
    "coverage>=7.6.12",
    "pytest-asyncio>=0.25.3",
    "types-requests>=2.32.0.20250306",
]

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]
# 忽略指定位置的特定错误
[[tool.mypy.overrides]]
module = "app.rag.llm.completions"
disable_error_code = ["call-arg"]

[[tool.mypy.overrides]]
module = "transformers.*"
ignore_missing_imports = true

[tool.ruff]
target-version = "py312"
exclude = ["alembic", "scripts"]
line-length = 120

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
